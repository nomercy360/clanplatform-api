CREATE TABLE users
(
    id            INT8 PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    email         VARCHAR(255)             NOT NULL,
    password_hash VARCHAR(255)             NOT NULL,
    full_name VARCHAR(255) NOT NULL,
    created_at    TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW(),
    updated_at    TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW(),
    deleted_at    TIMESTAMP WITH TIME ZONE
);

CREATE UNIQUE INDEX idx_users_email
    ON users (email);

CREATE TABLE customers
(
    id          INT8 PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    email       VARCHAR(255)             NOT NULL,
    first_name  VARCHAR(255)             NOT NULL,
    last_name   VARCHAR(255)             NOT NULL,
    created_at  TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW(),
    updated_at  TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW(),
    deleted_at  TIMESTAMP WITH TIME ZONE,
    has_account BOOLEAN                  NOT NULL DEFAULT FALSE
);

CREATE TABLE images
(
    id         INT8 PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    url        VARCHAR(255),
    created_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW(),
    is_main    BOOLEAN                  NOT NULL DEFAULT FALSE,
    updated_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW(),
    deleted_at TIMESTAMP WITH TIME ZONE
);

CREATE TABLE currencies
(
    code   VARCHAR(3) PRIMARY KEY,
    name   VARCHAR(255),
    symbol VARCHAR(255)
);

CREATE TABLE product_categories
(
    id         INT8 PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    name       VARCHAR(255)             NOT NULL,
    created_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW(),
    updated_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW(),
    deleted_at TIMESTAMP WITH TIME ZONE
);

CREATE TABLE product_collections
(
    id         INT8 PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    title      VARCHAR(255)             NOT NULL,
    handle     VARCHAR(255)             NOT NULL,
    created_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW(),
    updated_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW(),
    deleted_at TIMESTAMP WITH TIME ZONE
);

CREATE TABLE products
(
    id            INT8 PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    title        VARCHAR(255)             NOT NULL,
    subtitle      VARCHAR(255),
    description   TEXT,
    handle       VARCHAR(255)             NOT NULL,
    is_published BOOLEAN                  NOT NULL DEFAULT FALSE,
    created_at   TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW(),
    updated_at   TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW(),
    deleted_at   TIMESTAMP WITH TIME ZONE,
    metadata      JSONB,
    collection_id INT8
        CONSTRAINT fk_products_collections REFERENCES product_collections
);


CREATE TABLE product_categories_products
(
    product_id  INT8
        CONSTRAINT fk_products_categories_products REFERENCES products,
    category_id INT8
        CONSTRAINT fk_products_categories_categories REFERENCES product_categories,
    PRIMARY KEY (product_id, category_id)
);

CREATE TABLE product_images
(
    product_id INT8
        CONSTRAINT fk_product_images_products REFERENCES products,
    image_id   INT8
        CONSTRAINT fk_product_images_images REFERENCES images,
    PRIMARY KEY (product_id, image_id)
);

CREATE TABLE product_variants
(
    id         INT8 PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    product_id INT8                     NOT NULL
        CONSTRAINT fk_product_variants_products REFERENCES products,
    title      VARCHAR(255),
    inventory  INT4,
    created_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW(),
    updated_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW(),
    deleted_at TIMESTAMP WITH TIME ZONE,
    UNIQUE (product_id, title)
);

CREATE TABLE product_prices
(
    id          INT8 PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    product_id  INT8
        CONSTRAINT fk_product_prices_products REFERENCES products,
    currency_id VARCHAR(3)
        CONSTRAINT fk_product_prices_currencies REFERENCES currencies,
    amount      INT4                     NOT NULL,
    created_at  TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW(),
    updated_at  TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW(),
    deleted_at  TIMESTAMP WITH TIME ZONE,
    UNIQUE (product_id, currency_id)
);

CREATE TABLE addresses
(
    id          INT8 PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    customer_id INT8
        CONSTRAINT fk_addresses_customers REFERENCES customers,
    first_name  VARCHAR(255),
    last_name   VARCHAR(255),
    address     VARCHAR(255),
    city        VARCHAR(255),
    province    VARCHAR(255),
    country     VARCHAR(255),
    zip         VARCHAR(255),
    phone       VARCHAR(255),
    created_at  TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW(),
    updated_at  TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW(),
    deleted_at  TIMESTAMP WITH TIME ZONE
);

CREATE INDEX idx_addresses_customer_id
    ON addresses (customer_id);

CREATE TYPE discount_type_enum AS ENUM ('percentage', 'fixed', 'free_shipping');

CREATE TABLE discounts
(
    id          INT8 PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    code        VARCHAR(255)             NOT NULL,
    is_active   BOOLEAN                  NOT NULL DEFAULT FALSE,
    type        discount_type_enum       NOT NULL,
    usage_limit INT4                     NOT NULL DEFAULT 0,
    usage_count INT4                     NOT NULL DEFAULT 0,
    value       INT4                     NOT NULL,
    starts_at   TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW(),
    ends_at     TIMESTAMP WITH TIME ZONE,
    created_at  TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW(),
    updated_at  TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW(),
    deleted_at  TIMESTAMP WITH TIME ZONE
);

CREATE UNIQUE INDEX idx_discounts_code
    ON discounts (code);

CREATE TABLE payment_providers
(
    id      VARCHAR NOT NULL
        CONSTRAINT payment_providers_pkey PRIMARY KEY,
    enabled BOOLEAN NOT NULL DEFAULT FALSE
);

CREATE TYPE order_status_enum AS ENUM ('pending', 'processing', 'shipped', 'delivered', 'cancelled');
CREATE TYPE payment_status_enum AS ENUM ('pending', 'confirmed', 'refunded');


CREATE TABLE shipping_methods
(
    id            INT8 PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    name          VARCHAR(255)             NOT NULL,
    description   TEXT,
    cost          decimal(10, 2)           NOT NULL,
    delivery_time VARCHAR(255),
    created_at    TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW(),
    updated_at    TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW()
);

CREATE SEQUENCE order_number_seq;

CREATE TABLE orders
(
    id                 INT8 PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    customer_id        INT8
        CONSTRAINT fk_orders_customers REFERENCES customers,
    address_id         INT8
        CONSTRAINT fk_orders_addresses REFERENCES addresses,
    discount_id        INT8
        CONSTRAINT fk_orders_discounts REFERENCES discounts,
    status             order_status_enum        NOT NULL DEFAULT 'pending',
    payment_status     payment_status_enum      NOT NULL DEFAULT 'pending',
    total_price        INT4                     NOT NULL,
    created_at         TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW(),
    updated_at         TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW(),
    deleted_at         TIMESTAMP WITH TIME ZONE,
    shipping_method_id INT8
        CONSTRAINT fk_orders_shipping_methods REFERENCES shipping_methods,
    order_number       VARCHAR(255) unique      NOT NULL DEFAULT (nextval('order_number_seq')::TEXT)
);

CREATE TABLE payments
(
    id                  INT8 PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    order_id            INT8
        CONSTRAINT fk_payments_orders REFERENCES orders,
    payment_provider_id VARCHAR
        CONSTRAINT fk_payments_payment_providers REFERENCES payment_providers,
    status              payment_status_enum      NOT NULL DEFAULT 'pending',
    amount              INT4                     NOT NULL,
    created_at          TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW(),
    updated_at          TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW(),
    deleted_at          TIMESTAMP WITH TIME ZONE
);

CREATE TABLE order_items
(
    id         INT8 PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    order_id   INT8
        CONSTRAINT fk_order_items_orders REFERENCES orders,
    product_id INT8
        CONSTRAINT fk_order_items_products REFERENCES products,
    quantity   INT4                     NOT NULL,
    price      INT4                     NOT NULL,
    created_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW(),
    updated_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW(),
    deleted_at TIMESTAMP WITH TIME ZONE
);

create table notification_provider
(
    id      VARCHAR NOT NULL
        CONSTRAINT notification_provider_pkey PRIMARY KEY,
    enabled BOOLEAN NOT NULL DEFAULT FALSE
);

create table notification
(
    id            INT8 PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    event_name    VARCHAR,
    resource_type VARCHAR                                NOT NULL,
    resource_id   VARCHAR                                NOT NULL,
    customer_id   INT8
        CONSTRAINT notification_customer_id_fk
            REFERENCES customers,
    "to"          VARCHAR,
    data          JSONB                                  NOT NULL,
    provider_id   VARCHAR
        CONSTRAINT notification_provider_id_fk
            REFERENCES notification_provider,
    created_at    TIMESTAMP WITH TIME ZONE DEFAULT NOW() NOT NULL,
    updated_at    TIMESTAMP WITH TIME ZONE DEFAULT NOW() NOT NULL
);

CREATE INDEX "idx_notification_resource_type"
    ON notification (resource_type);

CREATE INDEX "idx_notification_resource_id"
    ON notification (resource_id);

CREATE INDEX "idx_notification_customer_id"
    ON notification (customer_id);


INSERT INTO currencies (code, name, symbol)
VALUES ('usd', 'United States Dollar', '$');

INSERT INTO currencies (code, name, symbol)
VALUES ('eur', 'Euro', '€');

INSERT INTO currencies (code, name, symbol)
VALUES ('rub', 'Russian Ruble', '₽');


